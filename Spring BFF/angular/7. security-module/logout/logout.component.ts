import {Component, inject} from '@angular/core';
import {HttpClient} from "@angular/common/http";
import {UserAuthService} from "../../services/authentication-service/authentication.service";
import {lastValueFrom} from "rxjs";
import {baseUri} from "../../../main";

/**********************************************************************************************************************/
/***************************************************** COMPONENT ******************************************************/
/**********************************************************************************************************************/

@Component({
  selector: 'app-logout',
  standalone: true,
  imports: [],
  templateUrl: './logout.component.html',
  styleUrl: './logout.component.scss'
})
export class LogoutComponent {

/**********************************************************************************************************************/
/************************************************** STORES & SERVICES *************************************************/
/**********************************************************************************************************************/

  private http: HttpClient = inject(HttpClient);
  private user: UserAuthService = inject(UserAuthService);

/**********************************************************************************************************************/
/****************************************************** FUNCTIONS *****************************************************/
/**********************************************************************************************************************/

  protected logout() {
    lastValueFrom(
      this.http.post('/bff/logout', null, {
        headers: {
          'X-POST-LOGOUT-SUCCESS-URI': baseUri,
        },
        observe: 'response',
      })
    )
      .then((resp) => {
        const logoutUri = resp.headers.get('Location');
        if (!!logoutUri) {
          window.location.href = logoutUri;
        }
      })
      .finally(() => {
        this.user.refresh();
      });
  }

}

/**********************************************************************************************************************/
/*************************************************** END OF ANGULAR ***************************************************/
/**********************************************************************************************************************/

